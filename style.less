/*
    style.css is now a compiled less file - make sure you are editing style.less 
     instead or your changes might be erased by compilation of the less file!
*/

// style.less
// autoprefixer settings: 
//   > 3%, last 2 Chrome versions, last 2 Firefox versions, last 2 Safari versions, not ie 6-9

// colour themes and other styling
// using * to apply theming elements is a little hacky but !inherit or adding it manually would add a dozen lines to this
* {
    transition-timing-function: cubic-bezier(.58,.11,.51,.97);
}

html,
body {
    --blue: #3f96e6;
    --red: #f03e2d;
    margin: 0;
    border: none;
    background-color: var(--bg);
    color: var(--text);
    overflow-x: hidden;
    font-family: sans-serif;
    transition: background-color 0.4s 0s, color 0.3s 0.1s;
    height: 100vh;

    &.dark {
        --bg: #222222;
        --ebg: #555555;
        --text: #dddddd;
        --etext: #eeeeee;
    }

    &.light {
        --bg: \#eeeeee;
        --ebg: #e0e0e0;
        --text: #222222;
        --etext: #111111;
    }

    .theme {
        position: absolute;
        top: 1rem;
        right: 1rem;
        z-index: 11;
        font-size: 17.5px;
    }
}


// file drop / upload page
.intro {
    position: absolute;
    z-index: 0;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    transition: top 1.5s;

    .drag-file {
        background-color: var(--text);
        outline: 2px dashed var(--bg);
        color: var(--bg);
        outline-offset: -15px;
        border-radius: 5px;
        padding: 120px 20px;
    
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translateY(-50%) translateX(-50%);
    
        width: 100%; /* vscode throws an error on this but it is needed */
        max-width: 680px;
    
        font-size: 1.25rem;
    
        display: block;
        text-align: center;

        &.highlight {
            background-color: var(--etext);
        }
    }

    .uploading, .done   { 
        display: none;   
        input#file+label { display: none; }
    }
    &.uploading .uploading { display: inline; }
    &.done      .done      { display: inline; }

    +.main {
        position: absolute;
        left: -100%;
        transition: left 1.5s 0.5s;
    }
    &.done + .main { left: 0%; }
}


// styling of the main window & error container
.main {
    padding: 1rem;
    width: 100%;
    width: calc(100% - 2rem);

    #output { // errors
        max-height: 350px;
        max-height: calc(100vh - 18rem - 300px);
        min-height: 200px;
        overflow-y: auto;
        position: relative;
        top: 1em;

        .parent { // single error
            padding: 0.4rem 0rem;
            width: calc(100% - 1rem);
            background-color: var(--bg);
            color: var(--text);
            transition: background-color 1s, color 1s;
            border-radius: 1.5rem;

            &.selected { // when clicked
                background-color: var(--ebg);
                color: var(--etext);
            }

            img { // note direction/type indicator
                height: 2.1rem;
                position: relative;
                cursor: pointer;
                left: 1rem;
            }
            
            .text {
                width: 50%;
                width: calc(100% - 5rem);
            
                left: 2rem;
                top: -0.1rem;
            
                display: inline-block;
                position: relative;
            }

            &.info, &.warning, &.error { display: none; }
        }
        &.info .info, &.warning .warning, &.error .error { display: block; }
    }

    #render-container {
        position: relative;
        max-width: 900px;
        left: 50%;
        transform: translateX(-50%);
        width: calc(100vw - 2rem);
        height: 300px;
        border: 1px solid black;
        border-radius: 4px;
        overflow: hidden;
        background-color: var(--ebg);
        transition: background-color 0.4s, transform 0.3s, left 0.4s, max-width 0.4s;
    
        #grid-container {
            --width: 200px;
            --height: 150px;
            position: absolute;
            left: calc(50% - (var(--width) / 2));
            top: calc(50% - (var(--height) / 2));
            width: var(--width);
            height: var(--height);
            transform-style: preserve-3d;
    
            .marker {
                display: flex;
                align-items: center;
                position: absolute;
    
                .marker-line {
                    background-color: var(--etext);
                    transition: background-color 0.3s 0.1s;
                }
    
                .marker-number {
                    color: var(--etext);
                    margin-left: 0.3rem;
                    font-size: 1.8rem;
                    font-weight: bold;
                    transition: color 0.3s 0.1s;
                }
            }
    
            .note {
                --size: 50px;
                width: var(--size);
                height: var(--size);
                position: absolute;
                transform-style: preserve-3d;
    
                .note-face {
                    position: absolute;
                    display: block;
                    width: var(--size);
                    height: var(--size);
                    outline: 0.5px solid black;
    
                    &.front  { transform: rotateY(0deg)   translateZ(calc(var(--size) / 2)); }
                    &.back   { transform: rotateY(180deg) translateZ(calc(var(--size) / 2)); }
                    &.left   { transform: rotateY(-90deg) translateZ(calc(var(--size) / 2)); }
                    &.right  { transform: rotateY(90deg)  translateZ(calc(var(--size) / 2)); }
                    &.top    { transform: rotateX(90deg)  translateZ(calc(var(--size) / 2)); }
                    &.bottom { transform: rotateX(-90deg) translateZ(calc(var(--size) / 2)); }
                }
    
                &.error .note-face { outline: 2px solid red;    }
                &.warn  .note-face { outline: 2px solid yellow; }
                &.precedingError .note-face { outline: 1px solid red;    }
                &.precedingWarn  .note-face { outline: 1px solid yellow; }
            }
        }
    } // 3d visualiser
}


// main title styling
h1 {
    position: absolute;
    top: -0.2rem;
    left: 50%;
    font-size: 1.5rem;
    transform: translateX(-50%);
    transition: transform 0.3s 0s, font-size 0.3s 0.1s, left 0.4s;
}


// input and label styling
input {
    &#file {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;

        &:focus+label strong,
        &+label:hover strong { color: var(--blue); }
    }

    &[type=number] {
        position: relative;
        top: -1px;
        padding: 6px 4px;
        border-radius: 5px;
        background-color: var(--ebg);
        box-shadow: none;
        border: 1px var(--ebg);
        color: var(--text);
    }

    &[type=range] { 
        width: 200px; 

        &+label {
            position: relative;
            top: -4px;
            left: 3px;
        }
    }
}

label {
    cursor: pointer;
    display: inline-block;

    &:hover strong { color: var(--blue); }

    .submit {
        padding: 4px 6px;
        border-radius: 5px;
        background-color: var(--ebg);

        &:hover { color: var(--blue); }
    }
}

// responsive bits
@supports(appearance: none) {
    input[type='checkbox'] {
        appearance: none;
        height: 20px;
        width: 40px;
        border-radius: 11px;
        outline: none;
        display: inline-block;
        vertical-align: top;
        position: relative;
        margin: 0;
        cursor: pointer;
        border: 1px solid var(--bg);
        background: var(--blue);
        transition: background .4s, border .4s;

        &:after {
            content: '';
            display: block;
            position: absolute;
            transition: transform 0.4s;
            left: 3px;
            top:  2px;
            border-radius: 50%;
            width: 14px;
            height: 14px;
            background: #eeeeee;
            transform: translateX(var(--x, 0));
        }

        &:checked { 
            background: var(--red);
            --x: 18px; 
        }
    }
}


@media screen and (min-width: 1200px) {
    #render-container {
        max-width: 600px;
        left: 0%;
        transform: translateX(0%);
    }
    #summary {
        display: block;
        position: absolute;
        left: calc(600px + 2rem);
        top: 3.4rem;
        width: calc(100vw - 600px - 3rem);
    }
    #output {
        position: absolute;
        left: calc(600px + 2rem);
        top: 5.3rem;
        width: calc(100vw - 600px - 3rem);
        height: calc(100vh - 6.3rem);
        max-height: none;
    }
}

@media screen and (max-width: 800px) {
    h1 {
        left: 1rem;
        transform: none;
    }
    .intro .drag-file {
        padding: 120px 20px;
        max-width: 420px;
    }
}

@media screen and (max-width: 632px) {
    h1 {
        font-size: 1em;
        top: 0.1em;
    }
}