/*
    style.css is now a compiled less file - make sure you are editing style.less 
     instead or your changes might be erased by compilation of the less file!
*/

// style.less
// autoprefixer settings: 
//   > 3%, last 2 Chrome versions, last 2 Firefox versions, last 2 Safari versions, not ie 6-9

// colour themes and other styling

html,
body {
    --blue: #3f96e6;
    --red: #f03e2d;
    --warning: #ffca00;
    --error: #ee0000;
    --trans: cubic-bezier(.58,.11,.51,.97);
    
    margin: 0;
    background-color: var(--bg);
    color: var(--text);
    font-family: sans-serif;
    transition: background-color 0.3s var(--trans), color 0.3s var(--trans);
    height: 100vh;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    min-width: 38rem;
    min-width: ~'min(38rem, 100vw)';

    @media screen and (min-width: 42rem) { 
        overflow-x: hidden;
    }

    &.dark {
        --bg:   #222222;
        --dbg:  #1a1a1a;
        --ebg:  #555555;
        --text: #dddddd;
        --etext:#f4f4f4;
    }

    &.light {
        --dbg:  #e0e0e0;
        --ebg:  #fbfbfb;
        --bg:   #eeeeee;
        --text: #222222;
        --etext:#111111;
    }
}

// bar at top with title and theme switcher
.topbar {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    padding: 1rem;

    div {
        flex: 1;
        white-space: nowrap;

        &.left {
            padding-right: 1rem;
        }

        &.right {
            display: flex;
            flex-direction: row;
            justify-content: flex-end;
            padding-left: 1rem;

            div {
                flex: 0;

                label, input {
                    vertical-align: middle;
                    cursor: pointer;
                }
            }
        }

        h1 {
            margin: 0;
            text-align: center;
        }
    }

    @media screen and (max-width: 42rem) {
        div {
            flex: none;
        }
        h1 {
            font-size: 1.5rem;
            text-align: left;
        }
    }
    @media screen and (max-width: 34rem) {
        h1 {font-size: 1.25rem;}
    }
}

// intro screen
.intro {
    visibility: visible;
    position: absolute;
    z-index: 0;
    width: 100%;
    height: 100%;
    top: 0;
    transition: transform 1s var(--trans), visibility 0s linear 1s, top 0s linear 1s;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    .drag-file {
        width: 45vw;
        min-width: 38rem;
        min-width: ~'min(38rem, 95vw)'; // LESS does not support min yet, so this is escaped
        min-height: 20rem;
        background-color: var(--text);
        border-radius: 0.375rem;
        outline: 0.125rem dashed var(--bg);
        outline-offset: -1rem;
        color: var(--bg);
        font-size: 1.25rem;
        line-height: 20rem;
        text-align: center;
        transition: background-color 0.3s var(--trans), color 0.3s var(--trans), outline 0.3s var(--trans), width 0.3s var(--trans);

        &.highlight {
            background-color: var(--etext);
            width: 55vw;
        }

        input {
            display: none;
        }

        label {
            display: inline-block;
            width: 100%;
            height: 100%;
            text-align: center;
            cursor: pointer;

            &:focus strong,
            &:hover strong {
                color: var(--blue);
            }
        }

        .uploading-text, .done-text {
            display: none;
        }
    }

    & + .main {
        transform: translateX(-100%);
    }

    &.uploading, &.done {
        label {
            display: none;
        }
    }

    &.uploading {
        .uploading-text {
            display: inline;
        }
    }

    &.done {
        transform: translateX(100%);
        visibility: hidden;
        top: -100vh;

        .done-text {
            display: inline;
        }
    }

    &.done + .main {
        visibility: visible;
        transition: transform 1s var(--trans);
        transform: translateX(0%);
    }
}

// main
.main {
    visibility: hidden;
    position: relative;
    --gap: 1rem;
    flex: 1;

    display: flex;
    flex-direction: row;
    justify-content: center;
    padding: 0 var(--gap) var(--gap) var(--gap);

    .renderbox {
        padding: 0 var(--gap) 0 0;
        min-width: 38rem;
        min-width: ~'min(35rem, 95vw)';
        max-width: 50rem;
        flex: 1;

        #render-container {
            position: relative;
            width: 100%;
            height: 20rem;
            margin-bottom: var(--gap);
            border-radius: 1rem;
            background-color: var(--ebg);
            transition: background-color 0.3s var(--trans);
            overflow: hidden;

            &.rotating {
                cursor: all-scroll;
            }
            
            &.selected { // when clicked
                background-color: var(--ebg);
                color: var(--etext);
                transform: translateX(0.5rem);
            }
            
            img { // note direction/type indicator
                height: 2.1rem;
                position: relative;
                cursor: pointer;
                left: 0.5rem;
            }

            #grid-container {
                position: absolute;
                --width: calc(10rem * 4 / 3);
                --height: 10rem;
                left: calc(50% - (var(--width) / 2));
                top: calc(50% - (var(--height) / 2));
                width: var(--width);
                height: var(--height);
                transform-style: preserve-3d;

            .text {
                width: 50%;
                width: calc(100% - 5.5rem);

                left: 1.5rem;
                top: -0.28rem;
            
                display: inline-block;
                position: relative;
                cursor: pointer;
            
            }
        }

        .slider {
            input, label {
                vertical-align: middle;
            }

            input {
                width: 12rem;
            }
        }
        @media screen and (min-width: 52rem) and (max-width: calc(35rem + 40rem + 3 * 1rem)) {
            .slider:nth-child(even) {
                position: absolute;
                left: 50%;
            }
        }
    }

    .outputbox {
        position: relative;
        width: 40rem;
        max-width: 60rem;
        min-height: 15rem;
        flex: 1.18;

        display: flex;
        flex-direction: column;

        .outboxline {
            line-height: 1.875rem;

            input, label {
                vertical-align: middle;
                cursor: pointer;
            }
    
            #errors {
                margin-right: 1rem;
            }

            &#summary {
                padding-bottom: 0.25rem;
            }
    
            input[type=number] {
                position: relative;
                cursor: auto;
                background-color: var(--ebg);
                color: var(--text);
                border: 0.0625rem solid transparent;
                outline: none;
                border-radius: 0.375rem;
                padding: 0.3rem;
                bottom: 0.0625rem;
                width: 2ch;
                text-align: center;
                transition: background-color 0.3s var(--trans), color 0.3s var(--trans);

                // remove arrows for webkit
                &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
                    display: none;
                }

                // same for firefox
                -moz-appearance: textfield;

                &:active, &:focus {
                    border: 0.0625rem solid var(--etext);
                }
            }
        }

// main title styling
h1 {
    position: absolute;
    top: -0.2rem;
    left: 50%;
    font-size: 1.5rem;
    transform: translateX(-50%);
    transition: transform 0.3s var(--trans) 0s, font-size 0.3s var(--trans) 0.1s, left var(--trans) 0.4s, top var(--trans) 0.4s;
}

            #output {
                position: absolute;
                width: 100%;
                height: 100%;
                overflow-y: auto;

                // doesn't work on firefox
                &::-webkit-scrollbar {
                    width: 0.75rem;
                }
                &::-webkit-scrollbar-track {
                    border-radius: 0.375rem;
                    background-color: var(--dbg);
                }
                &::-webkit-scrollbar-thumb {
                    border-radius: 0.375rem;
                    background-color: var(--ebg);

                    &:hover {
                        background-color: var(--text);
                    }
                }

                // firefox alternative
                @supports ((scrollbar-width: thin) and (scrollbar-color: #000 #000)) {
                    scrollbar-width: thin;
                    scrollbar-color: var(--ebg) var(--dbg);
                    transition: scrollbar-color 0.3s var(--trans);
                }

                .parent {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                    border-radius: 1rem;
                    cursor: pointer;
                    background-color: var(--bg);
                    color: var(--text);
                    transition: background-color 0.3s var(--trans), color 0.3s var(--trans),
                                margin 0.3s var(--trans), border-radius 0.3s var(--trans);

                    &.selected {
                        background-color: var(--ebg);
                        color: var(--etext);
                        margin: 0 1rem;
                    }

                    &.multiSelected {
                        border-radius: 0rem; 

                        &.firstSelected {
                            border-radius: 1rem 1rem 0rem 0rem;
                        }
                        &.lastSelected {
                            border-radius: 0rem 0rem 1rem 1rem;
                        }
                    }

                    &.info, &.warning, &.error {
                        display: none;
                    }

                    img {
                        height: 2rem;
                        margin: 0.7rem;
                        border-radius: 23%;
                    }

                    &.warning img {
                        border: 0.125rem solid var(--warning);
                    }
                    &.error img {
                        border: 0.125rem solid var(--error);
                    }

                    .text {
                        flex: 1;
                    }
                }

                &.showInfo .info,
                &.showWarnings .warning,
                &.showErrors .error {
                    display: flex;
                }
            }
        }
    }
}

select {
    position: relative;
    left: calc(50vw - 451px - 1.2em);
    margin-bottom: 3px;
    background-color: var(--ebg);
    color: var(--etext);
    border-radius: 5px;
    border: 1px solid black;
    padding: 0px 1px;
}

label {
    cursor: pointer;
    display: inline-block;

    // neither flexbox nor grid support the desired behaviour, so @media query it is
    @media screen and (max-width: calc(35rem + 40rem + 3 * 1rem)) {
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;

        .renderbox {
            flex: 0;
            width: 95vw;
            padding: 0 0 var(--gap) 0;
        }

        .outputbox {
            flex: 1;
            width: 95vw;
            padding: 0;
        }
    }
}


// fancy checkboxes
@supports(appearance: none) {
    input[type='checkbox'] {
        appearance: none;
        height: 1.25rem;
        width: 2.5rem;
        border-radius: 0.5625rem;
        outline: none;
        position: relative;
        margin: 0;
        background: var(--red);
        transition: background 0.3s var(--trans);
        --x: 0rem;

        &:after {
            content: '';
            position: absolute;
            transition: transform 0.3s var(--trans);
            border-radius: 50%;
            width: 1rem;
            height: 1rem;
            top: 50%;
            left: 0.125rem;
            transform: translateX(var(--x)) translateY(-50%);
            background: #eeeeee;
        }

        &:checked { 
            background: var(--blue);
            --x: 1.2rem; 
        }

        &:focus {
            border: 0.0625rem solid var(--etext);

            &:after { left: 0.0625rem; }
        }
    }
    select {
        left: 0px;
    }
}

@media screen and (max-width: 932px) {
    select {
        left: 0rem;
    }
}

@media screen and (max-width: 800px) {
    h1 {
        left: 1rem;
        top: -0.7rem;
        transform: none;
    }
    .intro .drag-file {
        padding: 120px 20px;
        max-width: 420px;
    }
}

@media screen and (max-width: 632px) {
    h1 {
        font-size: 1em;
        top: 0.1em;
    }
    .main #output {
        max-height: calc(100vh - 20rem - 300px);
    }
}

::-webkit-scrollbar {
    width: 12px;
}

::-webkit-scrollbar-track {
    background-color: var(--dbg);
    border-radius: 6px;
    opacity: 0.5;
}

::-webkit-scrollbar-thumb {
    background-color: var(--ebg);
    border-radius: 6px;

    &:hover {
        background-color: var(--text);
    }
}
