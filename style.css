/*
    style.css is now a compiled less file - make sure you are editing style.less 
     instead or your changes might be erased by compilation of the less file!
*/
html,
body {
  --blue: #3f96e6;
  --red: #f03e2d;
  --warning: #ffca00;
  --error: #ee0000;
  --trans: cubic-bezier(0.58, 0.11, 0.51, 0.97);
  margin: 0;
  background-color: var(--bg);
  color: var(--text);
  font-family: sans-serif;
  transition: background-color 0.3s var(--trans), color 0.3s var(--trans);
  height: 100vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  min-width: 38rem;
  min-width: min(38rem, 100vw);
}
@media screen and (min-width: 42rem) {
  html,
  body {
    overflow-x: hidden;
  }
}
html.dark,
body.dark {
  --bg: #222222;
  --dbg: #1a1a1a;
  --ebg: #555555;
  --text: #dddddd;
  --etext: #f4f4f4;
}
html.light,
body.light {
  --dbg: #e0e0e0;
  --ebg: #fbfbfb;
  --bg: #eeeeee;
  --text: #222222;
  --etext: #111111;
}
.topbar {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}
.topbar div {
  flex: 1;
  white-space: nowrap;
}
.topbar div.left {
  padding-right: 1rem;
}
.topbar div.right {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-left: 1rem;
}
.topbar div.right div {
  flex: 0;
}
.topbar div.right div label,
.topbar div.right div input {
  vertical-align: middle;
  cursor: pointer;
}
.topbar div h1 {
  margin: 0;
  text-align: center;
}
@media screen and (max-width: 42rem) {
  .topbar div {
    flex: none;
  }
  .topbar h1 {
    font-size: 1.5rem;
    text-align: left;
  }
}
@media screen and (max-width: 34rem) {
  .topbar h1 {
    font-size: 1.25rem;
  }
}
.intro {
  visibility: visible;
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 100%;
  top: 0;
  transition: transform 1s var(--trans), visibility 0s linear 1s, top 0s linear 1s;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.intro .drag-file {
  width: 45vw;
  min-width: 38rem;
  min-width: min(38rem, 95vw);
  min-height: 20rem;
  background-color: var(--text);
  border-radius: 0.375rem;
  outline: 0.125rem dashed var(--bg);
  outline-offset: -1rem;
  color: var(--bg);
  font-size: 1.25rem;
  line-height: 20rem;
  text-align: center;
  transition: background-color 0.3s var(--trans), color 0.3s var(--trans), outline 0.3s var(--trans), width 0.3s var(--trans);
}
.intro .drag-file.highlight {
  background-color: var(--etext);
  width: 55vw;
}
.intro .drag-file input {
  display: none;
}
.intro .drag-file label {
  display: inline-block;
  width: 100%;
  height: 100%;
  text-align: center;
  cursor: pointer;
}
.intro .drag-file label:focus strong,
.intro .drag-file label:hover strong {
  color: var(--blue);
}
.intro .drag-file .uploading-text,
.intro .drag-file .done-text {
  display: none;
}
.intro + .main {
  transform: translateX(-100%);
}
.intro.uploading label,
.intro.done label {
  display: none;
}
.intro.uploading .uploading-text {
  display: inline;
}
.intro.done {
  transform: translateX(100%);
  visibility: hidden;
  top: -100vh;
}
.intro.done .done-text {
  display: inline;
}
.intro.done + .main {
  visibility: visible;
  transition: transform 1s var(--trans);
  transform: translateX(0%);
}
.main {
  visibility: hidden;
  position: relative;
  --gap: 1rem;
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: 0 var(--gap) var(--gap) var(--gap);
}
.main .renderbox {
  padding: 0 var(--gap) 0 0;
  min-width: 38rem;
  min-width: min(35rem, 95vw);
  max-width: 50rem;
  flex: 1;
}
.main .renderbox #render-container {
  position: relative;
  width: 100%;
  height: 20rem;
  margin-bottom: var(--gap);
  border-radius: 1rem;
  background-color: var(--ebg);
  transition: background-color 0.3s var(--trans);
  overflow: hidden;
}
.main .renderbox #render-container.rotating {
  cursor: all-scroll;
}
.main .renderbox #render-container.scrolling {
  cursor: s-resize;
}
.main .renderbox #render-container #grid-container {
  position: absolute;
  --width: calc(10rem * 4 / 3);
  --height: 10rem;
  left: calc(50% - (var(--width) / 2));
  top: calc(50% - (var(--height) / 2));
  width: var(--width);
  height: var(--height);
  transform-style: preserve-3d;
}
.main .renderbox #render-container #grid-container .marker {
  display: flex;
  align-items: center;
  position: absolute;
}
.main .renderbox #render-container #grid-container .marker.decimalTime .marker-number {
  opacity: 0;
  cursor: default;
}
.main .renderbox #render-container #grid-container .marker.translucent {
  opacity: 0.5;
}
.main .renderbox #render-container #grid-container .marker .marker-line {
  background-color: var(--etext);
  transition: background-color 0.3s var(--trans);
}
.main .renderbox #render-container #grid-container .marker .marker-number {
  color: var(--etext);
  margin-left: 0.3rem;
  font-size: 1.8rem;
  font-weight: bold;
  transition: color 0.3s var(--trans);
  cursor: pointer;
}
.main .renderbox #render-container #grid-container .note {
  --size: 2.36rem;
  width: var(--size);
  height: var(--size);
  position: absolute;
  transform-style: preserve-3d;
  cursor: pointer;
}
.main .renderbox #render-container #grid-container .note .note-face {
  position: absolute;
  display: block;
  width: var(--size);
  height: var(--size);
  border-radius: 0.125rem;
}
.main .renderbox #render-container #grid-container .note .note-face.front {
  transform: rotateY(0deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.back {
  transform: rotateY(180deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.left {
  transform: rotateY(-90deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.right {
  transform: rotateY(90deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.top {
  transform: rotateX(90deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.bottom {
  transform: rotateX(-90deg) translateZ(calc(var(--size) / 2));
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.front {
  transform: rotateY(0deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.back {
  transform: rotateY(45deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.left {
  transform: rotateY(90deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.right {
  transform: rotateZ(135deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.top {
  transform: rotateX(-45deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.bomb.bottom {
  transform: rotateX(45deg) translateZ(0);
}
.main .renderbox #render-container #grid-container .note .note-face.translucent {
  opacity: 0.3;
}
.main .renderbox #render-container #grid-container .note .note-face.bomb {
  background-image: url('assets/bomb.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.dot_front_blue {
  background-image: url('assets/dot_front_blue.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.dot_front_red {
  background-image: url('assets/dot_front_red.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.note_front_blue {
  background-image: url('assets/note_front_blue.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.note_front_red {
  background-image: url('assets/note_front_red.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.note_side_blue {
  background-image: url('assets/note_side_blue.svg');
}
.main .renderbox #render-container #grid-container .note .note-face.note_side_red {
  background-image: url('assets/note_side_red.svg');
}
.main .renderbox #render-container #grid-container .note.precedingError .note-face {
  border: 0.0625rem solid black;
}
.main .renderbox #render-container #grid-container .note.precedingWarn .note-face {
  border: 0.0625rem solid black;
}
.main .renderbox #render-container #grid-container .note.error .note-face {
  border: 0.0625rem solid var(--error);
}
.main .renderbox #render-container #grid-container .note.warn .note-face {
  border: 0.0625rem solid var(--warning);
}
.main .renderbox .slider input,
.main .renderbox .slider label {
  vertical-align: middle;
}
.main .renderbox .slider input {
  width: 12rem;
}
@media screen and (min-width: 52rem) and (max-width: calc(35rem + 40rem + 3 * 1rem)) {
  .main .renderbox .slider:nth-child(even) {
    position: absolute;
    left: 50%;
  }
}
.main .outputbox {
  position: relative;
  width: 40rem;
  max-width: 60rem;
  min-height: 15rem;
  flex: 1.18;
  display: flex;
  flex-direction: column;
}
.main .outputbox .outboxline {
  line-height: 1.875rem;
}
.main .outputbox .outboxline input,
.main .outputbox .outboxline label {
  vertical-align: middle;
  cursor: pointer;
}
.main .outputbox .outboxline #errors {
  margin-right: 1rem;
}
.main .outputbox .outboxline#summary {
  padding-bottom: 0.25rem;
}
.main .outputbox .outboxline input[type=number] {
  position: relative;
  cursor: auto;
  background-color: var(--ebg);
  color: var(--text);
  border: 0.0625rem solid transparent;
  outline: none;
  border-radius: 0.375rem;
  padding: 0.3rem;
  bottom: 0.0625rem;
  width: 2ch;
  text-align: center;
  transition: background-color 0.3s var(--trans), color 0.3s var(--trans);
  -moz-appearance: textfield;
}
.main .outputbox .outboxline input[type=number]::-webkit-inner-spin-button,
.main .outputbox .outboxline input[type=number]::-webkit-outer-spin-button {
  display: none;
}
.main .outputbox .outboxline input[type=number]:active,
.main .outputbox .outboxline input[type=number]:focus {
  border: 0.0625rem solid var(--etext);
}
.main .outputbox .outputwrapper {
  position: relative;
  width: 100%;
  flex: 1;
}
.main .outputbox .outputwrapper #output {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow-y: auto;
}
.main .outputbox .outputwrapper #output::-webkit-scrollbar {
  width: 0.75rem;
}
.main .outputbox .outputwrapper #output::-webkit-scrollbar-track {
  border-radius: 0.375rem;
  background-color: var(--dbg);
}
.main .outputbox .outputwrapper #output::-webkit-scrollbar-thumb {
  border-radius: 0.375rem;
  background-color: var(--ebg);
}
.main .outputbox .outputwrapper #output::-webkit-scrollbar-thumb:hover {
  background-color: var(--text);
}
@supports ((scrollbar-width: thin) and (scrollbar-color: #000 #000)) {
  .main .outputbox .outputwrapper #output {
    scrollbar-width: thin;
    scrollbar-color: var(--ebg) var(--dbg);
    transition: scrollbar-color 0.3s var(--trans);
  }
}
.main .outputbox .outputwrapper #output .parent {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-radius: 1rem;
  cursor: pointer;
  background-color: var(--bg);
  color: var(--text);
  transition: background-color 0.3s var(--trans), color 0.3s var(--trans), margin 0.3s var(--trans), border-radius 0.3s var(--trans);
}
.main .outputbox .outputwrapper #output .parent.selected {
  background-color: var(--ebg);
  color: var(--etext);
  margin: 0 1rem;
}
.main .outputbox .outputwrapper #output .parent.multiSelected {
  border-radius: 0rem;
}
.main .outputbox .outputwrapper #output .parent.multiSelected.firstSelected {
  border-radius: 1rem 1rem 0rem 0rem;
}
.main .outputbox .outputwrapper #output .parent.multiSelected.lastSelected {
  border-radius: 0rem 0rem 1rem 1rem;
}
.main .outputbox .outputwrapper #output .parent.info,
.main .outputbox .outputwrapper #output .parent.warning,
.main .outputbox .outputwrapper #output .parent.error {
  display: none;
}
.main .outputbox .outputwrapper #output .parent img {
  height: 2rem;
  margin: 0.7rem;
  border-radius: 23%;
}
.main .outputbox .outputwrapper #output .parent.warning img {
  border: 0.125rem solid var(--warning);
}
.main .outputbox .outputwrapper #output .parent.error img {
  border: 0.125rem solid var(--error);
}
.main .outputbox .outputwrapper #output .parent.noHighlight img {
  border: none;
}
.main .outputbox .outputwrapper #output .parent .text {
  flex: 1;
}
.main .outputbox .outputwrapper #output.showInfo .info,
.main .outputbox .outputwrapper #output.showWarnings .warning,
.main .outputbox .outputwrapper #output.showErrors .error {
  display: flex;
}
@media screen and (max-width: calc(35rem + 40rem + 3 * 1rem)) {
  .main {
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
  }
  .main .renderbox {
    flex: 0;
    width: 95vw;
    padding: 0 0 var(--gap) 0;
  }
  .main .outputbox {
    flex: 1;
    width: 95vw;
    padding: 0;
  }
}
@supports ((-webkit-appearance: none) or (-moz-appearance: none) or (appearance: none)) {
  input[type='checkbox'] {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    height: 1.25rem;
    width: 2.5rem;
    border-radius: 0.5625rem;
    outline: none;
    position: relative;
    margin: 0;
    background: var(--red);
    transition: background 0.3s var(--trans);
    --x: 0rem;
  }
  input[type='checkbox']:after {
    content: '';
    position: absolute;
    transition: transform 0.3s var(--trans);
    border-radius: 50%;
    width: 1rem;
    height: 1rem;
    top: 50%;
    left: 0.125rem;
    transform: translateX(var(--x)) translateY(-50%);
    background: #eeeeee;
  }
  input[type='checkbox']:checked {
    background: var(--blue);
    --x: 1.2rem;
  }
  input[type='checkbox']:focus {
    border: 0.0625rem solid var(--etext);
  }
  input[type='checkbox']:focus:after {
    left: 0.0625rem;
  }
}
