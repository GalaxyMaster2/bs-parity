/*
    style.css is now a compiled less file - make sure you are editing style.less 
     instead or your changes might be erased by compilation of the less file!
*/
html,
body {
  --blue: #3f96e6;
  --red: #f03e2d;
  --warning: #ffca00;
  --error: #ee0000;
  --trans: cubic-bezier(0.58, 0.11, 0.51, 0.97);
  margin: 0;
  border: none;
  background-color: var(--bg);
  color: var(--text);
  overflow-x: hidden;
  font-family: sans-serif;
  transition: background-color 0.4s var(--trans) 0s, color 0.3s var(--trans) 0.1s;
  height: 100vh;
}
html.dark,
body.dark {
  --bg: #222222;
  --dbg: #1a1a1a;
  --ebg: #555555;
  --text: #dddddd;
  --etext: #eeeeee;
}
html.light,
body.light {
  --bg: #eeeeee;
  --dbg: #fbfbfb;
  --ebg: #e0e0e0;
  --text: #222222;
  --etext: #111111;
}
html .theme,
body .theme {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 11;
  font-size: 17.5px;
}
.intro {
  position: absolute;
  z-index: 0;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  transition: top 1.5s var(--trans);
}
.intro .drag-file {
  background-color: var(--text);
  outline: 2px dashed var(--bg);
  color: var(--bg);
  outline-offset: -15px;
  border-radius: 5px;
  padding: 120px 20px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%);
  width: 100%;
  /* vscode throws an error on this but it is needed */
  max-width: 680px;
  font-size: 1.25rem;
  display: block;
  text-align: center;
}
.intro .drag-file.highlight {
  background-color: var(--etext);
}
.intro .uploading,
.intro .done {
  display: none;
}
.intro .uploading input#file + label,
.intro .done input#file + label {
  display: none;
}
.intro.uploading .uploading {
  display: inline;
}
.intro.done .done {
  display: inline;
}
.intro + .main {
  position: absolute;
  left: -100%;
  transition: left 1.5s var(--trans) 0.5s;
}
.intro.done {
  top: -101%;
}
.intro.done + .main {
  left: 0%;
}
.main {
  padding: 1rem;
  width: 100%;
  width: calc(100% - 2rem);
}
.main #output {
  max-height: 350px;
  max-height: calc(100vh - 19rem - 300px);
  min-height: 200px;
  overflow-y: auto;
  position: relative;
  top: 0.7em;
}
.main #output .parent {
  padding: 0.4rem 0rem 0.12rem 0rem;
  width: calc(100% - 1rem);
  background-color: var(--bg);
  color: var(--text);
  transition: background-color 0.75s var(--trans), color 0.75s var(--trans);
  border-radius: 1.5rem;
}
.main #output .parent.selected {
  background-color: var(--ebg);
  color: var(--etext);
}
.main #output .parent img {
  height: 2.1rem;
  position: relative;
  cursor: pointer;
  left: 1rem;
}
.main #output .parent.warning img {
  border: 2px solid var(--warning);
  border-radius: 23%;
}
.main #output .parent.error img {
  border: 2px solid var(--error);
  border-radius: 23%;
}
.main #output .parent .text {
  width: 50%;
  width: calc(100% - 5rem);
  left: 2rem;
  top: -0.28rem;
  display: inline-block;
  position: relative;
  cursor: pointer;
}
.main #output .parent.info,
.main #output .parent.warning,
.main #output .parent.error {
  display: none;
}
.main #output.info .info,
.main #output.warning .warning,
.main #output.error .error {
  display: block;
}
.main #render-container {
  position: relative;
  max-width: 900px;
  left: 50%;
  transform: translateX(-50%);
  width: calc(100vw - 2rem);
  height: 300px;
  border: 1px solid black;
  border-radius: 4px;
  overflow: hidden;
  background-color: var(--ebg);
  transition: background-color 0.4s var(--trans), transform 0.3s var(--trans), left 0.4s var(--trans), max-width 0.4s var(--trans);
}
.main #render-container.rotating {
  cursor: all-scroll;
}
.main #render-container.scrolling {
  cursor: s-resize;
}
.main #render-container #grid-container {
  --width: 200px;
  --height: 150px;
  position: absolute;
  left: calc(50% - (var(--width) / 2));
  top: calc(50% - (var(--height) / 2));
  width: var(--width);
  height: var(--height);
  transform-style: preserve-3d;
}
.main #render-container #grid-container .marker {
  display: flex;
  align-items: center;
  position: absolute;
}
.main #render-container #grid-container .marker.decimalTime .marker-number {
  opacity: 0;
  cursor: default;
}
.main #render-container #grid-container .marker.transl {
  opacity: 0.7;
}
.main #render-container #grid-container .marker .marker-line {
  background-color: var(--etext);
  transition: background-color 0.3s var(--trans) 0.1s;
}
.main #render-container #grid-container .marker .marker-number {
  color: var(--etext);
  margin-left: 0.3rem;
  font-size: 1.8rem;
  font-weight: bold;
  transition: color 0.3s var(--trans) 0.1s;
  cursor: pointer;
}
.main #render-container #grid-container .note {
  --size: 50px;
  width: var(--size);
  height: var(--size);
  position: absolute;
  transform-style: preserve-3d;
  cursor: pointer;
}
.main #render-container #grid-container .note .note-face {
  position: absolute;
  display: block;
  width: var(--size);
  height: var(--size);
  border-radius: 2px;
}
.main #render-container #grid-container .note .note-face.front {
  transform: rotateY(0deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.back {
  transform: rotateY(180deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.left {
  transform: rotateY(-90deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.right {
  transform: rotateY(90deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.top {
  transform: rotateX(90deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.bottom {
  transform: rotateX(-90deg) translateZ(calc(var(--size) / 2));
}
.main #render-container #grid-container .note .note-face.transl {
  opacity: 0.5;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}
.main #render-container #grid-container .note .note-face.bomb {
  background-image: url('assets/bomb.svg');
}
.main #render-container #grid-container .note .note-face.dot_front_blue {
  background-image: url('assets/dot_front_blue.svg');
}
.main #render-container #grid-container .note .note-face.dot_front_red {
  background-image: url('assets/dot_front_red.svg');
}
.main #render-container #grid-container .note .note-face.note_front_blue {
  background-image: url('assets/note_front_blue.svg');
}
.main #render-container #grid-container .note .note-face.note_front_red {
  background-image: url('assets/note_front_red.svg');
}
.main #render-container #grid-container .note .note-face.note_side_blue {
  background-image: url('assets/note_side_blue.svg');
}
.main #render-container #grid-container .note .note-face.note_side_red {
  background-image: url('assets/note_side_red.svg');
}
.main #render-container #grid-container .note.precedingError .note-face {
  border: 1px solid black;
}
.main #render-container #grid-container .note.precedingWarn .note-face {
  border: 1px solid black;
}
.main #render-container #grid-container .note.error .note-face {
  border: 1px solid var(--error);
}
.main #render-container #grid-container .note.warn .note-face {
  border: 1px solid var(--warning);
}
h1 {
  position: absolute;
  top: -0.2rem;
  left: 50%;
  font-size: 1.5rem;
  transform: translateX(-50%);
  transition: transform 0.3s var(--trans) 0s, font-size 0.3s var(--trans) 0.1s, left var(--trans) 0.4s;
}
input#file {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
}
input#file:focus + label strong,
input#file + label:hover strong {
  color: var(--blue);
}
input[type=number] {
  position: relative;
  top: -1px;
  padding: 6px 4px;
  border-radius: 5px;
  background-color: var(--ebg);
  box-shadow: none;
  border: 1px var(--ebg);
  color: var(--text);
}
input[type=range] {
  width: 200px;
}
input[type=range] + label {
  position: relative;
  top: -4px;
  left: 3px;
}
label {
  cursor: pointer;
  display: inline-block;
}
label:hover strong {
  color: var(--blue);
}
label .submit {
  padding: 4px 6px;
  border-radius: 5px;
  background-color: var(--ebg);
}
label .submit:hover {
  color: var(--blue);
}
@supports ((-webkit-appearance: none) or (-moz-appearance: none) or (appearance: none)) {
  input[type='checkbox'] {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    height: 20px;
    width: 40px;
    border-radius: 11px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bg);
    background: var(--blue);
    transition: background 0.4s var(--trans), border 0.4s var(--trans);
  }
  input[type='checkbox']:after {
    content: '';
    display: block;
    position: absolute;
    transition: transform 0.4s var(--trans);
    left: 3px;
    top: 2px;
    border-radius: 50%;
    width: 14px;
    height: 14px;
    background: #eeeeee;
    transform: translateX(var(--x, 0));
  }
  input[type='checkbox']:checked {
    background: var(--red);
    --x: 18px;
  }
}
@media screen and (min-width: 1300px) {
  .main #render-container {
    max-width: 600px;
    left: 0%;
    transform: translateX(0%);
  }
  .main #summary {
    display: block;
    position: absolute;
    left: calc(600px + 2rem);
    top: 3.4rem;
    width: calc(100vw - 600px - 3rem);
  }
  .main #output {
    position: absolute;
    left: calc(600px + 2rem);
    top: 5.3rem;
    width: calc(100vw - 600px - 3rem);
    height: calc(100vh - 6.3rem);
    max-height: none;
  }
}
@media screen and (max-width: 800px) {
  h1 {
    left: 1rem;
    transform: none;
  }
  .intro .drag-file {
    padding: 120px 20px;
    max-width: 420px;
  }
}
@media screen and (max-width: 632px) {
  h1 {
    font-size: 1em;
    top: 0.1em;
  }
}
::-webkit-scrollbar {
  width: 12px;
}
::-webkit-scrollbar-track {
  background-color: var(--dbg);
  border-radius: 6px;
  opacity: 0.5;
}
::-webkit-scrollbar-thumb {
  background-color: var(--ebg);
  border-radius: 6px;
}
::-webkit-scrollbar-thumb:hover {
  background-color: var(--text);
}
